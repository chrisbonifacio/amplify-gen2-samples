{
  "Description": "Root Stack for AWS Amplify CLI",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "DeploymentBucketName": {
      "Type": "String",
      "Default": "DeploymentBucket",
      "Description": "Name of the common deployment bucket provided by the parent stack"
    },
    "AuthRoleName": {
      "Type": "String",
      "Default": "AuthRoleName",
      "Description": "Name of the common deployment bucket provided by the parent stack"
    },
    "UnauthRoleName": {
      "Type": "String",
      "Default": "UnAuthRoleName",
      "Description": "Name of the common deployment bucket provided by the parent stack"
    }
  },
  "Outputs": {
    "Region": {
      "Description": "CloudFormation provider root stack Region",
      "Value": {
        "Ref": "AWS::Region"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Region"
        }
      }
    },
    "StackName": {
      "Description": "CloudFormation provider root stack ID",
      "Value": {
        "Ref": "AWS::StackName"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-StackName"
        }
      }
    },
    "StackId": {
      "Description": "CloudFormation provider root stack name",
      "Value": {
        "Ref": "AWS::StackId"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-StackId"
        }
      }
    },
    "AuthRoleArn": {
      "Value": {
        "Fn::GetAtt": ["AuthRole", "Arn"]
      }
    },
    "UnauthRoleArn": {
      "Value": {
        "Fn::GetAtt": ["UnauthRole", "Arn"]
      }
    },
    "DeploymentBucketName": {
      "Description": "CloudFormation provider root stack deployment bucket name",
      "Value": {
        "Ref": "DeploymentBucketName"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DeploymentBucketName"
        }
      }
    },
    "AuthRoleName": {
      "Value": {
        "Ref": "AuthRole"
      }
    },
    "UnauthRoleName": {
      "Value": {
        "Ref": "UnauthRole"
      }
    }
  },
  "Resources": {
    "DeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Ref": "DeploymentBucketName"
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "0e1fb8a3-bf8f-442e-a7d2-b1fb447ec57b"
        }
      }
    },
    "AuthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Deny",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity"
            }
          ]
        },
        "RoleName": {
          "Ref": "AuthRoleName"
        }
      },
      "DeletionPolicy": "Retain",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "bcabe2d5-4f38-47d7-908c-0fb95479b115"
        }
      }
    },
    "UnauthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Deny",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity"
            }
          ]
        },
        "RoleName": {
          "Ref": "UnauthRoleName"
        }
      },
      "DeletionPolicy": "Retain",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e63f8aef-1a13-481c-aec4-7c2f11458e9a"
        }
      }
    },
    "authamplifygen1appa6ae5327": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifygen1app-dev-152457-deployment/amplify-cfn-templates/auth/amplifygen1appa6ae5327-cloudformation-template.json",
        "Parameters": {
          "identityPoolName": "amplifygen1appa6ae5327_identitypool_a6ae5327",
          "allowUnauthenticatedIdentities": false,
          "resourceNameTruncated": "amplifa6ae5327",
          "userPoolName": "amplifygen1appa6ae5327_userpool_a6ae5327",
          "autoVerifiedAttributes": "email",
          "mfaConfiguration": "OFF",
          "mfaTypes": "SMS Text Message",
          "smsAuthenticationMessage": "Your authentication code is {####}",
          "smsVerificationMessage": "Your verification code is {####}",
          "emailVerificationSubject": "Your verification code",
          "emailVerificationMessage": "Your verification code is {####}",
          "defaultPasswordPolicy": false,
          "passwordPolicyMinLength": 8,
          "passwordPolicyCharacters": "",
          "requiredAttributes": "email",
          "aliasAttributes": "",
          "userpoolClientGenerateSecret": false,
          "userpoolClientRefreshTokenValidity": 30,
          "userpoolClientWriteAttributes": "email",
          "userpoolClientReadAttributes": "email",
          "userpoolClientLambdaRole": "amplifa6ae5327_userpoolclient_lambda_role",
          "userpoolClientSetAttributes": false,
          "sharedId": "a6ae5327",
          "resourceName": "amplifygen1appa6ae5327",
          "authSelections": "identityPoolAndUserPool",
          "useDefault": "default",
          "usernameAttributes": "email",
          "userPoolGroupList": "",
          "serviceName": "Cognito",
          "usernameCaseSensitive": false,
          "useEnabledMfas": true,
          "authRoleArn": {
            "Fn::GetAtt": ["AuthRole", "Arn"]
          },
          "unauthRoleArn": {
            "Fn::GetAtt": ["UnauthRole", "Arn"]
          },
          "breakCircularDependency": true,
          "dependsOn": "",
          "env": "dev"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "87052d7f-972d-4895-b02a-1dea4fc0ffc3"
        }
      }
    },
    "apiamplifygen1app": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/amplify-amplifygen1app-dev-152457-deployment/amplify-cfn-templates/api/cloudformation-template.json",
        "Parameters": {
          "AppSyncApiName": "amplifygen1app",
          "DynamoDBBillingMode": "PAY_PER_REQUEST",
          "DynamoDBEnableServerSideEncryption": false,
          "AuthCognitoUserPoolId": {
            "Fn::GetAtt": ["authamplifygen1appa6ae5327", "Outputs.UserPoolId"]
          },
          "S3DeploymentBucket": "amplify-amplifygen1app-dev-152457-deployment",
          "S3DeploymentRootKey": "amplify-appsync-files/e711e7bba9f98673fae2fddbcf9b7836ee5d49af",
          "env": "dev"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "f7fb26cf-0d70-4b3e-8c59-f8e70f99e661"
        }
      }
    },
    "UpdateRolesWithIDPFunction": {
      "DeletionPolicy": "Retain",
      "DependsOn": ["AuthRole", "UnauthRole", "authamplifygen1appa6ae5327"],
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "const response = require('cfn-response');",
                "const { IAMClient, GetRoleCommand, UpdateAssumeRolePolicyCommand } = require('@aws-sdk/client-iam');",
                "exports.handler = function(event, context) {",
                "    // Don't return promise, response.send() marks context as done internally",
                "    const ignoredPromise = handleEvent(event, context)",
                "};",
                "async function handleEvent(event, context) {",
                "    try {",
                "        let authRoleName = event.ResourceProperties.authRoleName;",
                "        let unauthRoleName = event.ResourceProperties.unauthRoleName;",
                "        let idpId = event.ResourceProperties.idpId;",
                "        let authParamsJson = {",
                "            'Version': '2012-10-17',",
                "            'Statement': [{",
                "                'Effect': 'Allow',",
                "                'Principal': {'Federated': 'cognito-identity.amazonaws.com'},",
                "                'Action': 'sts:AssumeRoleWithWebIdentity',",
                "                'Condition': {",
                "                    'StringEquals': {'cognito-identity.amazonaws.com:aud': idpId},",
                "                    'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'authenticated'}",
                "                }",
                "            }]",
                "        };",
                "        let unauthParamsJson = {",
                "            'Version': '2012-10-17',",
                "            'Statement': [{",
                "                'Effect': 'Allow',",
                "                'Principal': {'Federated': 'cognito-identity.amazonaws.com'},",
                "                'Action': 'sts:AssumeRoleWithWebIdentity',",
                "                'Condition': {",
                "                    'StringEquals': {'cognito-identity.amazonaws.com:aud': idpId},",
                "                    'ForAnyValue:StringLike': {'cognito-identity.amazonaws.com:amr': 'unauthenticated'}",
                "                }",
                "            }]",
                "        };",
                "        if (event.RequestType === 'Delete') {",
                "            try {",
                "                delete authParamsJson.Statement[0].Condition;",
                "                delete unauthParamsJson.Statement[0].Condition;",
                "                authParamsJson.Statement[0].Effect = 'Deny'",
                "                unauthParamsJson.Statement[0].Effect = 'Deny'",
                "                let authParams = {PolicyDocument: JSON.stringify(authParamsJson), RoleName: authRoleName};",
                "                let unauthParams = {PolicyDocument: JSON.stringify(unauthParamsJson), RoleName: unauthRoleName};",
                "                const iam = new IAMClient({region: event.ResourceProperties.region});",
                "                let res = await Promise.all([",
                "                    iam.send(new GetRoleCommand({RoleName: authParams.RoleName})),",
                "                    iam.send(new GetRoleCommand({RoleName: unauthParams.RoleName}))",
                "                ]);",
                "                res = await Promise.all([",
                "                    iam.send(new UpdateAssumeRolePolicyCommand(authParams)),",
                "                    iam.send(new UpdateAssumeRolePolicyCommand(unauthParams))",
                "                ]);",
                "                response.send(event, context, response.SUCCESS, {});",
                "            } catch (err) {",
                "                console.log(err.stack);",
                "                response.send(event, context, response.SUCCESS, {Error: err});",
                "            }",
                "        } else if (event.RequestType === 'Update' || event.RequestType === 'Create') {",
                "            const iam = new IAMClient({region: event.ResourceProperties.region});",
                "            let authParams = {PolicyDocument: JSON.stringify(authParamsJson), RoleName: authRoleName};",
                "            let unauthParams = {PolicyDocument: JSON.stringify(unauthParamsJson), RoleName: unauthRoleName};",
                "            const res = await Promise.all([",
                "                iam.send(new UpdateAssumeRolePolicyCommand(authParams)),",
                "                iam.send(new UpdateAssumeRolePolicyCommand(unauthParams))",
                "            ]);",
                "            response.send(event, context, response.SUCCESS, {});",
                "        }",
                "    } catch (err) {",
                "        console.log(err.stack);",
                "        response.send(event, context, response.FAILED, {Error: err});",
                "    }",
                "};"
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs18.x",
        "Timeout": 300,
        "Role": {
          "Fn::GetAtt": ["UpdateRolesWithIDPFunctionRole", "Arn"]
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "dcdd897b-1bd2-428a-8181-954a69984d56"
        }
      }
    },
    "UpdateRolesWithIDPFunctionOutputs": {
      "DeletionPolicy": "Retain",
      "Type": "Custom::LambdaCallout",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": ["UpdateRolesWithIDPFunction", "Arn"]
        },
        "region": {
          "Ref": "AWS::Region"
        },
        "idpId": {
          "Fn::GetAtt": ["authamplifygen1appa6ae5327", "Outputs.IdentityPoolId"]
        },
        "authRoleName": {
          "Ref": "AuthRole"
        },
        "unauthRoleName": {
          "Ref": "UnauthRole"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "1af4523a-cfa9-4ade-8ced-d3cfbc9de490"
        }
      }
    },
    "UpdateRolesWithIDPFunctionRole": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AuthRole"
              },
              "-idp"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "UpdateRolesWithIDPFunctionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": ["iam:UpdateAssumeRolePolicy", "iam:GetRole"],
                  "Resource": {
                    "Fn::GetAtt": ["AuthRole", "Arn"]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": ["iam:UpdateAssumeRolePolicy", "iam:GetRole"],
                  "Resource": {
                    "Fn::GetAtt": ["UnauthRole", "Arn"]
                  }
                }
              ]
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "4232eb40-7af4-4ae2-86c8-f27b6fe7c774"
        }
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "e63f8aef-1a13-481c-aec4-7c2f11458e9a": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "bcabe2d5-4f38-47d7-908c-0fb95479b115": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "4232eb40-7af4-4ae2-86c8-f27b6fe7c774": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 210
        },
        "z": 1,
        "embeds": []
      },
      "87052d7f-972d-4895-b02a-1dea4fc0ffc3": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 210
        },
        "z": 1,
        "embeds": []
      },
      "dcdd897b-1bd2-428a-8181-954a69984d56": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 300,
          "y": 90
        },
        "z": 1,
        "embeds": [],
        "dependson": [
          "bcabe2d5-4f38-47d7-908c-0fb95479b115",
          "e63f8aef-1a13-481c-aec4-7c2f11458e9a",
          "87052d7f-972d-4895-b02a-1dea4fc0ffc3"
        ]
      },
      "1af4523a-cfa9-4ade-8ced-d3cfbc9de490": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 300,
          "y": 210
        },
        "z": 1,
        "embeds": []
      },
      "f7fb26cf-0d70-4b3e-8c59-f8e70f99e661": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 330
        },
        "z": 1,
        "embeds": []
      },
      "0e1fb8a3-bf8f-442e-a7d2-b1fb447ec57b": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 330
        },
        "z": 1,
        "embeds": []
      }
    }
  }
}
